% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Track.R
\docType{class}
\name{Track-class}
\alias{Track}
\alias{Track-class}
\title{A class representing a Track or locations over time for a specific particle}
\description{
A class representing a Track or locations over time for a specific particle
}
\section{Fields}{

\describe{
\item{\code{id}}{numeric ID of the particle being tracked}

\item{\code{points}}{data.frame table of x, y, t, frame, vx, vy and optionally smoothed versions of vx and vy called vxs and vys (see method smoothVelocities)}

\item{\code{validFrames}}{numeric vector Vector frame numbers of the track that are set to 'valid' using 'setValidFrames' method}

\item{\code{.parent}}{TrackList The parent TrackList object of this Track object}
}}
\section{Methods}{

\describe{
\item{\code{addPoint(x, y, t, frame)}}{#' Add a point to the 'points' field of this track. It is
#' assumed you are adding things in an appropriate order.
#' Typically the points are listed in order of frame.
#' @param x A single numeric value indicating the x position of the point
#' @param y A single numeric value indicating the y position of the point
#' @param t A single numeric value indicating the time corresponding to this frame/point
#' @param frame A single numeric value indicating the frame corresponding to this frame/point}

\item{\code{calculateVelocities()}}{#' Internally populate/update the values 'vx' and 'vy' within
#' the points vield using 'getDerivative(x, y)'}

\item{\code{getSlot(slot, rel = FALSE, validOnly = FALSE)}}{#' Get a vector of the values indicated by 'slot' for this point.
#' This accessor method is useful because the data is stored within
#' a data.frame field called points.
#' 'validOnly' indicates whether to return values for the validFrames only or all frames
#' typical slots are x, y, t, frame, vx, vy}

\item{\code{getTrackSweep(amplitude = 1, offset = mean(getSlot(slot = "x")),
  validFramesOnly = FALSE, guess = NULL)}}{#' This method is provided as a convenience. It calls 'getSweep' using
#' parameters that exist within the 'Track' and parent 'TrackList'
#' when available or the 'getSweep' defaults.
#' @param amplitude A numeric value
#' @param offset A numeric value
#' @param validFrames A boolean indicating whether to only get sweep values for valid frames only
#' @param guess A boolean indicating whether to guess appropriate parameters for this track}

\item{\code{initializeWithTrackROI(id, start, pattern, t0_Frame, timePerFrame)}}{#' Using the value in the 'PolygonPts' value and the 'PatternPts'
#' value from a JEX ROI that represents a track, create an R 'Track'
#' object. Assign the track the id given as 'id'.}

\item{\code{length()}}{#' Return the number of frames in this track.}

\item{\code{plotTrack(slotX = "t", slotY = "x", funX = NULL, funY = NULL,
  relX = FALSE, relY = TRUE, validOnly = FALSE, add = FALSE,
  withTitle = TRUE, col = "black", lwd = 1, lty = 1, xlab = slotX,
  ylab = slotY, type = "l", ...)}}{#' Plot the track
#' @param slotX The x variable string name
#' @param slotY The y variable string name
#' @param relX A boolean indicating whether to plot x relative to its mean
#' @param relY A boolean indicating whether to plot y relative to its mean
#' @param funX function A function to transform the slotX data before plotting (e.g., to scale between pixels per second velocity to microns per second velocity)
#' @param funY function A function transform the slotY data before plotting (see funX)
#' @param ... Additional args are passed to the 'plot' method
#' @param validOnly A boolean indicating whether to plot 'valid frames' only (see setValidFrames) or all frames in this track}

\item{\code{range(slot, rel = FALSE)}}{#' For the indicated 'slot' (i.e., column within the points field),
#' return the range that this value takes.}

\item{\code{setValidFrames(frames)}}{#' Set the 'valid frames' of the Track. Valid frames are those frames
#' which correspond to steady motion of the particle (i.e., not when
#' the particle/cell is switching directions due to changes in flow)
#' @param frames The numeric vector indicating the frames of this track that are 'valid'}

\item{\code{smoothVelocities(allWidths, allFrames)}}{#' Smooth the vx and vy velocity calculations for this track
#' @param allWidths A numeric vector of all the appropriate widths for each possible frame in the parent TrackList
#' @param allFrames A numeric vector of all the possible frames of the parent TrackList}

\item{\code{sseTrack(amplitude = 50, phaseShift = 0, offset = 0,
  validFramesOnly = FALSE)}}{#' Calculates the sum square error (i.e., sse) between this track
#' and a sweep function with the given 'amplitude', 'phaseShift',
#' and 'offset'.
#' @param validFramesOnly A boolean to limit the calculation to just the 'validFrames' listed in this Track.
#' The additional sweep parameters of sin, tAll, fi, and ff are passed
#' from the track's parent 'TrackList'.}
}}

